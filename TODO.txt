D  = Done
De = Deprecated, not required for some reason or another
D! = Done, not sure if it should remain that way though
D? = I think its done, but it might not be done right
Dx = Undone

   Documentation:
   * Javadoc all public methods
   * Javadoc all private/protected methods
   * Javadoc all classes
   * Inline comment unclear code sections
   * Explain changes/additions to the subset of METS
   * Other observations on program
   **Document coding practices for metadata plugin writers

   Testing and Logging:
   * Set up JUnit tests
   * Integrate Log4j

   General System:
D  * Embed CRules file into Zip file
D  * BUG: saving over current .zip file causes JVM to crash
   * Remove cruft libraries.  Log4j?
   * Saving of SIP file
D    * How to get the "type" in the structMap section of the METS file
       - Type field explicity part of Metadata class now
     * What to do about unknown mime types?
D    * Fix the header creation
D    * How do we attach multiple metadata records to the root of the tree?
D  * Loading of a SIP file
D    * Fix MinimalMetadata writing out
D    * Fix METS validation
D    * Read in individual SIP tree
D    * Parse in METS file
D      * Read in entry information
D      * Read in metadata
D      * Associate each entry with its metadata
         - Had to use extra unused fields in METS
D      * Read in MIMETYPEs
D      * set Metadata ID counter
D  * MIME Type detection
D    * Give the user the power to switch
D    * Create wrapper interface
D    * jMimeMagic
D      * Integrate
De     * Replace oro with java regexs
De     * Edit Magic.xml
D      * Evaluate usefulness
D    * JAF from Sun
D      * Integrate
D      * Evaluate usefulness
De   * Tool linked from Sandy
   * Integrate JHove
   * Do a more intelligent model update, than "structure changed" on root...
De * Save file's metadata beyond directory switching?
D    * At least show a warning dialog when switching directories
D  * Close all metadata tabs when switching

   File Selection Task:
   * Bug: Collapsing a branch that causes a scroll event also causes a selection event
   * Allow web directories too
D  * Find a way to hide unselected files
D  * Integrate Filtering
D    * Remove Filtering
D  * Fix ellipses (...) problem when selecting tree nodes
D  * Remove "Unchecked Boxes Hidden" button
D  * Reorder view; directories first
D  * Make sure to deselect all nodes
D  * Lazy tree evaluation
De   * Alternate: threaded loading approach (still need lazy for web dirs)


   Filtering Subtask:
D  * Inclusion/Exclusion patterns for mass (de)selection of files
Dx * Using a dialog
D  * Using a real regex language
D  * Escape . to mean \. and * to mean .*

   Metadata Entry Task:
   * Allow for the user to "tack on" a METS file?
   * Develop automatic generation of metadata
     * Based on location in hierarchy?
     * Based on Parent's metadata?
     * Based on System aspects? (time, etc)
     * Based on global values (always use the same creator, etc)
D  * Use hideable panels
D  * Change tab wrap style to scroll
D  * Just use hints for metadata tabs
     * Metadata tabs labeled as "hint" + "label"
D  * Use METS ID safe strings (no ":", " ", and limit length to 64)
     - Used unique number (unique across JVM)
D  * Integrate Filtering
D  * Present nicer view of available metadata formats
D  * UI Widget for editing metadata names
D  * Allow for display and editing of mime type
D  * Reorder view; directories first
D  * Avoid tab name collisions
D  * DC Metadata format
D    * Use pull down boxes for first field of DC Table
D    * Sorting within table
D    * Primitive way of "saving" table data into the actual DCFields instance
D  * Develop generic metadata API so that new formats can be "dropped in"

   CRules Task:
   * Allow for a way to check relationships of two nodes
   * Allow for a way to save new CRules.xml
   * Check to make sure ConversionRulesTask never actually *changes* its conversionRules object (why?)
   * Warn if there is more than one DatastreamTemplate of any type per Entry
   * Use a map to go from nodeType to DTs, OTs, and Namespaces
   * Allow for visualization of graph
D    * Allow for visualization of all relationships
     * Allow for relationship classes to be individually viewable
D    * Use special ObjectTemplate nodeTypes of "file", "folder", and "*".
     * Allow for propogation of new rules back into XML file
       * Based on Node name?
       * Based on Node "type"?
   * More complicated primitive relationships?
     * Chains of currently used relationships?
     * Subset of XPath?
     * New language?
D  * Allow for new datastream templates to be created (visible in metadata entry task)
D  * Allow for files on web, not just local files
D  * Refix annoying start sizes for CRules HideablePanels
D  * Merge Datastream/Object template panels
D  * Position relationship list at bottom right of DOT panel
D  * Import it
D  * Slightly confusing/inaccurate way of representing primitiveRels     

   General GUI:
   * Make GUI pretty
     * Use icons rather than text
     * Get some decent icons
   * Find a nice way to display actions available
D  * Make Hideable panels optionally resizeable
D  * Changed "File System" to "File Select"
D  * Button to switch UI Look and Feels
D  * Toolbar at top
D  * All extra space goes to right hand pane
De * Fix up the "hide unchecked files" button
Dx   * Remove focus box
D? * Use tooltips
D  * Use min/max buttons as show/hide metaphor in HideablePanel
D  * Use a special panel as the grip to resize HideablePanel objects
D  * Left tabs = tasks
D  * Remove "load crules" buttons from toolbar

